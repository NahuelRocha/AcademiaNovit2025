version: "3.8"

services:
  postgres:
    image: postgres:16.6-alpine
    environment:
      POSTGRES_DB: datos
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: tivon1234
      POSTGRES_INITDB_ARGS: "--encoding=UTF-8"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - app_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 256M
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U admin -d datos"]
      interval: 10s
      timeout: 5s
      retries: 5

  api:
    image: ghcr.io/nahuelrocha/academianovit2025:production
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - ASPNETCORE_URLS=http://+:8080
      - ConnectionStrings__DefaultConnection=Host=postgres;Port=5432;Database=datos;Username=admin;Password=tivon1234
    networks:
      - app_network
    deploy:
      replicas: 5
      update_config:
        parallelism: 2
        delay: 10s
        order: start-first
      restart_policy:
        condition: on-failure
        delay: 5s
        max_attempts: 3
      resources:
        limits:
          memory: 256M
        reservations:
          memory: 128M
    healthcheck:
      test: ["CMD-SHELL", "curl -f http://localhost:8080/health || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 3

  nginx:
    image: nginx:1.25.5-alpine
    ports:
      - "80:80"
      - "8080:8080"
    networks:
      - app_network
    deploy:
      replicas: 1
      placement:
        constraints:
          - node.role == manager
      restart_policy:
        condition: on-failure
    configs:
      - source: nginx_config
        target: /etc/nginx/nginx.conf
    depends_on:
      - api

volumes:
  postgres_data:

networks:
  app_network:
    driver: overlay
    attachable: true

configs:
  nginx_config:
    external: true
