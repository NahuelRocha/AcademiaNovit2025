events {
    worker_connections 1024;
}

http {
    resolver 127.0.0.11 valid=10s;

    client_max_body_size 20M;
    client_body_buffer_size 128k;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;
    proxy_buffer_size 4k;
    proxy_buffers 8 4k;
    proxy_busy_buffers_size 8k;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    server {
        listen 80;
        listen 8080;

        access_log /var/log/nginx/access.log main;
        error_log /var/log/nginx/error.log warn;

        location /nginx-health {
            access_log off;
            return 200 "nginx ok\n";
            add_header Content-Type text/plain;
        }

        # API
        location / {
            set $upstream api:8080;
            proxy_pass http://$upstream;

            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header Connection "";
            proxy_http_version 1.1;

            proxy_next_upstream error timeout invalid_header http_500 http_502 http_503 http_504;
            proxy_next_upstream_tries 3;
            proxy_next_upstream_timeout 60s;
        }

        location /health {
            access_log off;
            set $upstream api:8080;
            proxy_pass http://$upstream/health;
            proxy_connect_timeout 5s;
            proxy_read_timeout 5s;
            proxy_send_timeout 5s;

            proxy_set_header Host $host;
            proxy_set_header Connection "close";

            error_page 502 503 504 = @health_fallback;
        }

        location @health_fallback {
            access_log off;
            return 503 "api not ready\n";
            add_header Content-Type text/plain;
        }

        # GRAFANA
        location /grafana/ {
            proxy_pass http://grafana:3000/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            # Espec√≠fico para Grafana
            proxy_set_header X-Grafana-Referer $http_referer;
            proxy_set_header X-Scheme $scheme;
            
            # Manejo de WebSockets
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "Upgrade";
            
            # Rewrite de URLs
            sub_filter 'href="/' 'href="/grafana/';
            sub_filter 'src="/' 'src="/grafana/';
            sub_filter 'url("/' 'url("/grafana/';
            sub_filter_once off;
        }

        # PROMETHEUS
        location /prometheus/ {
            proxy_pass http://prometheus:9090/prometheus/;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            
            sub_filter '="/' '="/prometheus/';
            sub_filter_once off;
            sub_filter_types *;
            
            proxy_http_version 1.1;
            proxy_redirect off;
        }
    }
}