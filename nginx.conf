events {
    worker_connections 1024;
}

http {
    resolver 127.0.0.11 valid=10s;
    client_max_body_size 20M;
    client_body_buffer_size 128k;
    proxy_connect_timeout 60s;
    proxy_send_timeout 60s;
    proxy_read_timeout 60s;

    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';

    server {
        listen 80;

        # health de Nginx
        location /nginx-health {
            access_log off;
            return 200 "nginx ok\n";
            add_header Content-Type text/plain;
        }

        # health de la API
        location /health {
            proxy_pass http://api:8080/health;
            proxy_set_header Host $host;
            proxy_set_header Connection "close";
            error_page 502 503 504 = @health_fallback;
        }
        location @health_fallback {
            return 503 "api not ready\n";
            add_header Content-Type text/plain;
        }

        # Grafana en sub-ruta - CONFIGURACIÓN ORIGINAL + SOLO HTTPS FIX
        location /grafana/ {
            proxy_pass         http://grafana:3000;
            proxy_http_version 1.1;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            # ÚNICO CAMBIO: Agregar este header para Mixed Content
            proxy_set_header   X-Forwarded-Proto https;
            proxy_set_header   X-Forwarded-Host  $host;
            proxy_redirect     / /grafana/;
        }

        # Prometheus en sub-ruta
        location /prometheus/ {
            proxy_pass         http://prometheus:9090/prometheus/;
            proxy_http_version 1.1;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
            proxy_set_header   X-Forwarded-Host  $host;
            proxy_redirect     http://prometheus:9090/prometheus/ /prometheus/;
            proxy_redirect     /prometheus/ /prometheus/;
        }

        # Ubicación alternativa para recursos estáticos de Prometheus
        location /prometheus/static/ {
            proxy_pass         http://prometheus:9090/prometheus/static/;
            proxy_http_version 1.1;
            proxy_set_header   Host             $host;
        }

        # API principal - DEBE IR AL FINAL
        location / {
            proxy_pass         http://api:8080/;
            proxy_http_version 1.1;
            proxy_set_header   Host             $host;
            proxy_set_header   X-Real-IP        $remote_addr;
            proxy_set_header   X-Forwarded-For  $proxy_add_x_forwarded_for;
            proxy_set_header   X-Forwarded-Proto $scheme;
        }
    }
}