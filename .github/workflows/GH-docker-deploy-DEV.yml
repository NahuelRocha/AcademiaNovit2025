name: Docker Deploy DEV

on:
  workflow_dispatch:

env:
  REGISTRY: ghcr.io
  IMAGE_NAME: ${{ github.repository }}
  DEPLOY_TAG: production

jobs:
  deploy:
    runs-on: ubuntu-22.04
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Copy files to server
        uses: garygrossgarten/github-action-scp@release
        with:
          local: nginx.conf
          remote: ~/academianovit-prod/nginx.conf
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          privateKey: ${{ secrets.VM_PRIVATE_KEY }}
          port: ${{ secrets.VM_PORT }}

      - name: Copy docker-swarm.yml to server
        uses: garygrossgarten/github-action-scp@release
        with:
          local: docker-swarm.yml
          remote: ~/academianovit-prod/docker-swarm.yml
          host: ${{ secrets.VM_HOST }}
          username: ${{ secrets.VM_USER }}
          privateKey: ${{ secrets.VM_PRIVATE_KEY }}
          port: ${{ secrets.VM_PORT }}

      - name: Deploy to production via SSH
        uses: appleboy/ssh-action@v1.0.3
        with:
          host: ${{ secrets.VM_HOST }}
          port: ${{ secrets.VM_PORT }}
          username: ${{ secrets.VM_USER }}
          key: ${{ secrets.VM_PRIVATE_KEY }}
          script: |
            set -e

            cd ~/academianovit-prod

            echo "ðŸŒ€ Iniciando despliegue Swarm en producciÃ³n..."

            # Exportar secretos como variables de entorno
            export POSTGRES_DB=${{ secrets.POSTGRES_DB }}
            export POSTGRES_USER=${{ secrets.POSTGRES_USER }}
            export POSTGRES_PASSWORD=${{ secrets.POSTGRES_PASSWORD }}
            export GITHUB_REPOSITORY=${{ github.repository }}

            # Crear o reemplazar config para nginx
            docker config rm nginx_config || true
            docker config create nginx_config nginx.conf

            # Pull de la imagen antes del despliegue (preheat)
            docker pull ghcr.io/${{ github.repository }}:${{ env.DEPLOY_TAG }}

            # Despliegue del stack
            docker stack deploy -c docker-swarm.yml academianovit

            echo "âœ… Despliegue completado."

      - name: Send notification
        if: always()
        uses: dawidd6/action-send-mail@v3
        with:
          server_address: ${{ secrets.DEBUGMAIL_HOST }}
          server_port: ${{ secrets.DEBUGMAIL_PORT }}
          username: ${{ secrets.DEBUGMAIL_USER }}
          password: ${{ secrets.DEBUGMAIL_PASS }}
          subject: "ðŸš€ Deploy a ProducciÃ³n ${{ job.status }}"
          body: |
            Se ha realizado el deploy a producciÃ³n.

            Imagen: ghcr.io/${{ github.repository }}:${{ env.DEPLOY_TAG }}
            Resultado: ${{ job.status }}
            Ver logs: ${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}
          to: ${{ secrets.EMAIL_TO }}
          from: ${{ secrets.DEBUGMAIL_USER }}
